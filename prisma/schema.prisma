// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  spotifyId String   @unique @db.VarChar(128)
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  role      UserRole @default(USER)

  savedAlbums SpotifyAlbum[] @relation("UserSavedAlbums")
  tournaments Tournament[]   @relation("UserTournaments")

  @@map("users")
}

model SpotifyAlbum {
  id         String  @id @default(uuid()) @db.Uuid
  spotifyId  String  @unique @db.VarChar(128)
  name       String  @db.VarChar(255)
  artistName String  @db.VarChar(255)
  imageUrl   String? @db.VarChar(255)

  savingUsers      User[]            @relation("UserSavedAlbums")
  tournamentRounds TournamentRound[] @relation("TournamentRoundAlbum")

  @@map("spotify_albums")
}

model Tournament {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(64)
  createdAt DateTime @default(now())
  published Boolean  @default(false)

  user   User   @relation("UserTournaments", fields: [userId], references: [id])
  userId String @db.Uuid

  rounds TournamentRound[] @relation("TournamentRounds")

  @@map("tournaments")
}

model TournamentRound {
  id Int @id @default(autoincrement())

  previousRounds TournamentRound[] @relation("TournamentRoundTree")
  nextRound      TournamentRound?  @relation("TournamentRoundTree", fields: [nextRoundId], references: [id])
  nextRoundId    Int?

  album   SpotifyAlbum? @relation("TournamentRoundAlbum", fields: [albumId], references: [id])
  albumId String?       @db.Uuid

  tournament   Tournament @relation("TournamentRounds", fields: [tournamentId], references: [id])
  tournamentId String     @db.Uuid

  @@map("tournament_rounds")
}

enum UserRole {
  USER
  ADMIN
}
